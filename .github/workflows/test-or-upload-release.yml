name: Build Kernel

on:
  push:
    branches: 
      - '**'
    paths-ignore:
      - 'README.md'
  pull_request:
    branches:
      - '**'   # Matches all branches
    paths-ignore:
      - 'README.md'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name'
        required: true
        default: '1.8.0'
      upload_releases:
        description: 'Upload releases'
        required: true
        default: 'true'
        type: boolean
      mark_prerelease:
        description: 'Mark as prerelease'
        required: true
        default: 'false'
        type: boolean
  
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # strategy:
    #   fail-fast: false
    #   max-parallel: 2   
    #   matrix:
    #     ksu: [true, false]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build Kernel
      uses: mlm-games/simple-kernel-build-action@main
      with:
        KERNEL_CONFIG: 'blossom_defconfig'
        ARCH: 'arm64'
        TOOLCHAIN_CLONE_CMD: 'mkdir -p $HOME/clang && wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/master/clang-r530567.tar.gz -O clang.tar.gz && tar xf clang.tar.gz -C $HOME/clang && sudo apt install gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi'
        ENABLE_CCACHE: 'true'
        MAKE_ARGS: 'O=out PATH=$HOME/clang/bin:$PATH CC="ccache clang" CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi-'
        # ENABLE_KSU: ${{ matrix.ksu }}
        # KSU_KPROBE_ONLY: ${{matrix.ksu }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-build
        path: 'kernel_source/*.zip'
  
    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      if: github.event_name == 'workflow_dispatch' && inputs.upload_releases == true
      with:
        files: |
          kernel_source/*.zip
        name: Kernel Flashable zip // ${{ inputs.tag_name }}
        tag_name: ${{ inputs.tag_name }}
        body: |
          Flash using custom recovery or Kernel Flasher Apps from F-Droid
        prerelease: ${{ inputs.mark_prerelease }}
